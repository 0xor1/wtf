// Code generated by qtc from "jineps.sql". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line jineps.sql:1
package jineps

//line jineps.sql:1
import . "github.com/0xor1/tlbx/pkg/core"

//line jineps.sql:2
import "github.com/0xor1/tlbx/pkg/json"

//line jineps.sql:3
import sqlh "github.com/0xor1/tlbx/pkg/web/app/sql"

//line jineps.sql:5
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line jineps.sql:5
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line jineps.sql:5
func streamqryInsert(qw422016 *qt422016.Writer, args *sqlh.Args, me ID, val *json.Json) {
//line jineps.sql:6
	qw422016.N().S(`INSERT INTO jins( id, val ) VALUES ( ?, ? ) `)
//line jineps.sql:16
	*args = *sqlh.NewArgs(2)
	args.Append(
		me,
		val,
	)

//line jineps.sql:22
}

//line jineps.sql:22
func writeqryInsert(qq422016 qtio422016.Writer, args *sqlh.Args, me ID, val *json.Json) {
//line jineps.sql:22
	qw422016 := qt422016.AcquireWriter(qq422016)
//line jineps.sql:22
	streamqryInsert(qw422016, args, me, val)
//line jineps.sql:22
	qt422016.ReleaseWriter(qw422016)
//line jineps.sql:22
}

//line jineps.sql:22
func qryInsert(args *sqlh.Args, me ID, val *json.Json) string {
//line jineps.sql:22
	qb422016 := qt422016.AcquireByteBuffer()
//line jineps.sql:22
	writeqryInsert(qb422016, args, me, val)
//line jineps.sql:22
	qs422016 := string(qb422016.B)
//line jineps.sql:22
	qt422016.ReleaseByteBuffer(qb422016)
//line jineps.sql:22
	return qs422016
//line jineps.sql:22
}

//line jineps.sql:24
func streamqryDelete(qw422016 *qt422016.Writer, args *sqlh.Args, me ID) {
//line jineps.sql:25
	qw422016.N().S(`Delete FROM jins WHERE id=? `)
//line jineps.sql:29
	*args = *sqlh.NewArgs(1)
	args.Append(
		me,
	)

//line jineps.sql:34
}

//line jineps.sql:34
func writeqryDelete(qq422016 qtio422016.Writer, args *sqlh.Args, me ID) {
//line jineps.sql:34
	qw422016 := qt422016.AcquireWriter(qq422016)
//line jineps.sql:34
	streamqryDelete(qw422016, args, me)
//line jineps.sql:34
	qt422016.ReleaseWriter(qw422016)
//line jineps.sql:34
}

//line jineps.sql:34
func qryDelete(args *sqlh.Args, me ID) string {
//line jineps.sql:34
	qb422016 := qt422016.AcquireByteBuffer()
//line jineps.sql:34
	writeqryDelete(qb422016, args, me)
//line jineps.sql:34
	qs422016 := string(qb422016.B)
//line jineps.sql:34
	qt422016.ReleaseByteBuffer(qb422016)
//line jineps.sql:34
	return qs422016
//line jineps.sql:34
}

//line jineps.sql:36
func streamqrySelect(qw422016 *qt422016.Writer, args *sqlh.Args, me ID) {
//line jineps.sql:37
	qw422016.N().S(`SELECT val FROM jins WHERE id=? `)
//line jineps.sql:42
	*args = *sqlh.NewArgs(1)
	args.Append(
		me,
	)

//line jineps.sql:47
}

//line jineps.sql:47
func writeqrySelect(qq422016 qtio422016.Writer, args *sqlh.Args, me ID) {
//line jineps.sql:47
	qw422016 := qt422016.AcquireWriter(qq422016)
//line jineps.sql:47
	streamqrySelect(qw422016, args, me)
//line jineps.sql:47
	qt422016.ReleaseWriter(qw422016)
//line jineps.sql:47
}

//line jineps.sql:47
func qrySelect(args *sqlh.Args, me ID) string {
//line jineps.sql:47
	qb422016 := qt422016.AcquireByteBuffer()
//line jineps.sql:47
	writeqrySelect(qb422016, args, me)
//line jineps.sql:47
	qs422016 := string(qb422016.B)
//line jineps.sql:47
	qt422016.ReleaseByteBuffer(qb422016)
//line jineps.sql:47
	return qs422016
//line jineps.sql:47
}
